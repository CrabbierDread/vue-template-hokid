#/bin/bash

exposedev() {
  ssh -R 80:$(docker-machine ip project-name-vm):3000 -p 2222 ssh.localhost.run
  echo 'exit status: '$?
  if [ $? -eq 255 ]; then
    exposedev
  fi;
}

kill_log_job_dev() {
  if [ ! -z $PROJECT_ENV_LOG_JOB_DEV_PID ]; then
    echo "kill current log job $PROJECT_ENV_LOG_JOB_DEV_PID"
    kill $PROJECT_ENV_LOG_JOB_DEV_PID
    unset PROJECT_ENV_LOG_JOB_DEV_PID
  fi;
}

kill_log_job_prod() {
  if [ ! -z $PROJECT_ENV_LOG_JOB_PROD_PID ]; then
    echo "kill current log job $PROJECT_ENV_LOG_JOB_PROD_PID"
    kill $PROJECT_ENV_LOG_JOB_PROD_PID
    unset PROJECT_ENV_LOG_JOB_PROD_PID
  fi;
}

rundev() {
  kill_log_job_dev
  docker-compose up --no-color -d project-name-dev
  export PROJECT_ENV_LOG_JOB_DEV_PID=$(docker-compose logs --no-color -ft --tail 0 project-name-dev &> logs_dev.log & echo $!)
  echo "container log placed in /logs_dev.log"
}

runprod() {
  kill_log_job_prod
  docker-compose up --no-color -d project-name-prod
  export PROJECT_ENV_LOG_JOB_PROD_PID=$(docker-compose logs --no-color -ft --tail 0 project-name-prod &> logs_prod.log & echo $!)
  echo "container log placed in /logs_prod.log"
}

stopdev() {
  kill_log_job_dev
  docker-compose stop project-name-dev
}

stopprod() {
  kill_log_job_prod
  docker-compose stop project-name-prod
}

shelldev() {
  winpty docker exec -it project-name-dev bash
}

shellprod() {
  winpty docker exec -it project-name-prod bash
}

rsdev() {
  stopdev
  rundev
}

rsprod() {
  stopprod
  runprod
}

export -f exposedev
export -f kill_log_job_dev
export -f kill_log_job_prod
export -f rundev
export -f runprod
export -f stopdev
export -f stopprod
export -f shelldev
export -f shellprod
export -f rsdev
export -f rsprod
